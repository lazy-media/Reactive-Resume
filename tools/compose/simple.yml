# In this Docker Compose example, it assumes that you maintain a reverse proxy externally (or chose not to).
# The only two exposed ports here are from minio (:9000) and the app itself (:3000).
# If these ports are changed, ensure that the env vars passed to the app are also changed accordingly.

#### THIS IS AN EXAMPLE OF A DOCKER COMPOSE FILE WITH AN .ENV FILE. THIS IS STILL IN TESTING. USE AT OWN RISK.

services:
  # Database (Postgres)
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Storage (for image uploads)
  minio:
    image: minio/minio:latest
    restart: unless-stopped
    command: server /data
    ports:
      - "${{STORAGE_PORT:-9000}}:9000"
    volumes:
      - ./minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}

  # Chrome Browser (for printing and previews)
  chrome:
    image: ghcr.io/browserless/chromium:v2.18.0 # Upgrading to newer versions causes issues
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      TIMEOUT: 10000
      CONCURRENT: 10
      TOKEN: ${CHROME_TOKEN}
      EXIT_ON_HEALTH_FAILURE: "true"
      PRE_REQUEST_HEALTH_CHECK: "true"

  app:
    image: ${IMAGE:-pickit420/reactive-resume}:${IMAGE_TAG:-latest}
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3000}:3000"
    depends_on:
      - postgres
      - minio
      - chrome
    environment:
      # -- Environment Variables --
      PORT: ${APP_PORT}
      NODE_ENV: ${NODE_ENV}

      # -- URLs --
      PUBLIC_URL: ${PUBLIC_URL}
      STORAGE_URL: ${STORAGE_URL}

      # -- Printer (Chrome) --
      CHROME_TOKEN: ${CHROME_TOKEN}
      CHROME_URL: ${CHROME_URL}

      # -- Database (Postgres) --
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}

      # -- Auth --
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}

      # -- Emails --
      MAIL_FROM: ${MAIL_FROM}
      SMTP_URL: smtp://${SMTP_USER}:${SMTP_PASS}@${SMTP_ADDR}:${SMTP_PORT} # Optional

      # -- Storage (Minio) --
      STORAGE_ENDPOINT: ${STORAGE_ENDPOINT}
      STORAGE_PORT: ${STORAGE_PORT}
      STORAGE_REGION: ${STORAGE_REGION} # Optional
      STORAGE_BUCKET: ${STORAGE_BUCKET}
      STORAGE_ACCESS_KEY: ${STORAGE_ACCESS_KEY}
      STORAGE_SECRET_KEY: ${STORAGE_SECRET_KEY}
      STORAGE_USE_SSL: ${STORAGE_USE_SSL}
      STORAGE_SKIP_BUCKET_CHECK: ${STORAGE_SKIP_BUCKET_CHECK}

      # -- Crowdin (Optional) --
      # CROWDIN_PROJECT_ID: ${CROWDIN_PROJECT_ID}
      # CROWDIN_PERSONAL_TOKEN: ${CROWDIN_PERSONAL_TOKEN}

      # -- Email (Optional) --
      DISABLE_SIGNUPS: ${DISABLE_SIGNUPS}
      DISABLE_EMAIL_AUTH: ${DISABLE_EMAIL_AUTH}

      # -- GitHub (Optional) --
      # GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      # GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      # GITHUB_CALLBACK_URL: ${GITHUB_CALLBACK_URL}

      # -- Google (Optional) --
      # GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      # GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      # GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL}

      # -- OpenID (Optional) --
#      VITE_OPENID_NAME: ${VITE_OPENID_NAME}
#      OPENID_AUTHORIZATION_URL: ${OPENID_AUTHORIZATION_URL}
#      OPENID_CALLBACK_URL: ${OPENID_CALLBACK_URL}
#      OPENID_CLIENT_ID: ${OPENID_CLIENT_ID}
#      OPENID_CLIENT_SECRET: ${OPENID_CLIENT_SECRET}
#      OPENID_ISSUER: ${OPENID_ISSUER}
#      OPENID_SCOPE: ${OPENID_SCOPE}
#      OPENID_TOKEN_URL: ${OPENID_TOKEN_URL}
#      OPENID_USER_INFO_URL: ${OPENID_USER_INFO_URL}

volumes:
  minio_data:
  postgres_data:
